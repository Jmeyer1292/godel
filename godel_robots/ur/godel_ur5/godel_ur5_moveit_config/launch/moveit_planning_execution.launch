<?xml version="1.0" ?>
<launch>
  <!-- The planning and execution components of MoveIt! configured to run -->
  <!-- using the ROS-Industrial interface. -->
 
  <rosparam param="controller_joint_names">[
    'shoulder_pan_joint',
    'shoulder_lift_joint',
    'elbow_joint',
    'wrist_1_joint',
    'wrist_2_joint',
    'wrist_3_joint']
  </rosparam>

  <!-- the "sim" argument controls whether we connect to a Simulated or Real robot -->
  <arg name="sim" default="true" />
  <arg name="robot_ip" unless="$(arg sim)" />
  <arg name="rviz" default="true"/>
  <arg name="use_db" default="false"/>
  <arg name="prefix" default=""/>
<!--  <arg name="-->
 
  <!-- load the robot_description parameter before launching ROS-I nodes -->
  <include file="$(find godel_ur5_moveit_config)/launch/planning_context.launch" >
    <arg name="load_robot_description" value="true" />
  </include>

  <!-- run the robot simulator and action interface nodes -->
  <group if="$(arg sim)">
    <rosparam param="initial_joint_state">[0.0, -1.03, 0.91 , -0.21, 0.0, 0.0]</rosparam>
    <include file="$(find industrial_robot_simulator)/launch/robot_interface_simulator.launch" />
  </group>

  <!-- run the "real robot" interface nodes -->
  <!--   - this typically includes: robot_state, motion_interface, and joint_trajectory_action nodes -->
  <!--   - replace these calls with appropriate robot-specific calls or launch files -->
  <group unless="$(arg sim)">
    <remap from="/follow_joint_trajectory/status" to="/joint_trajectory_action/status" />
    <remap from="/follow_joint_trajectory/feedback" to="/joint_trajectory_action/feedback" />
    <remap from="/follow_joint_trajectory/result" to="/joint_trajectory_action/result" />
    <remap from="/follow_joint_trajectory/goal" to="/joint_trajectory_action/goal" />
    <remap from="/follow_joint_trajectory/cancel" to="/joint_trajectory_action/cancel" />

    <include file="$(find ur_modern_driver)/launch/ur_common.launch">
      <arg name="prefix" value="$(arg prefix)" />
      <arg name="robot_ip" value="$(arg robot_ip)" />
      <arg name="min_payload" value="0" />
      <arg name="max_payload" value="5" />
    </include>
  </group>

  <!-- publish the robot state (tf transforms) -->
  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" />

  <include file="$(find godel_ur5_moveit_config)/launch/move_group.launch">
    <arg name="publish_monitored_planning_scene" value="true" />
  </include>

  <include if="$(arg rviz)" file="$(find godel_ur5_moveit_config)/launch/moveit_rviz.launch">
    <arg name="config" value="true"/>
  </include>
  
  <include if="$(arg use_db)" file="$(find godel_ur5_moveit_config)/launch/default_warehouse_db.launch" />

</launch>

